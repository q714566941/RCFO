package invoker;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.xml.ws.WebServiceClient;

import org.apache.commons.lang3.ArrayUtils;

import invoker_depends.*;


@WebServiceClient
public class sgx_invoker{
	public static final int N=30;
//	public native int init();
//	public native int destroy();
	public native int commit(long counter, int[] intArray, int intTail, double[] doubleArray, int doubleTail,float[] floatArray, int floatTail, long[] longArray, int longTail, char[] charArray,int charTail, byte[] byteArray,int byteTail);
   
//	static {
//		try{
//			System.out.println("invoker:"+System.getProperty("java.library.path"));
//			System.loadLibrary("SGX");           
//		}
//		catch (Exception e) {
//			//System.out.println("invoker"+System.getProperty("java.library.path"));
//			e.printStackTrace();
//		}
//	}  

	Object[] objArray = new Object[N];
	int objTail= 0;

	int[] intArray = new int[N];
	int intTail = 0;
	
	double[] doubleArray = new double[N];
	int doubleTail = 0;
	
	float[] floatArray = new float[N];
	int floatTail = 0;
	
	long[] longArray = new long[N];
	int longTail = 0;
	
	char[] charArray = new char[N];
	int charTail = 0;
	
	byte[] byteArray = new byte[N];
	int byteTail = 0;
	
	long counter = -1;
	
	public sgx_invoker(){
		//objects = new ArrayList<Object>();
	}
	
	public void clear(){
		intTail = 0;
		doubleTail = 0;
		floatTail = 0;
		longTail = 0;
		charTail = 0;
		byteTail = 0;
		//objects.clear();
	}
	
	public void add(Object o){
		if(o==null)
			intArray[intTail++]=0;
		else
			intArray[intTail++]=o.hashCode();
		//objArray[objTail++] = o;
	}
	
	public void add(boolean o){
		if(o==true)
			intArray[intTail++]=1;
		else
			intArray[intTail++]=0;
		//objArray[objTail++] = o;
	}
	
	public void add(int o){
		intArray[intTail++] = o;
	}
	
	public void add(double o){
		doubleArray[doubleTail++] = o;
	}
	public void add(float o){
		floatArray[floatTail++] = o;
	}
	
	public void add(long o){
		longArray[longTail++] = o;
	}
	public void add(char o){
		charArray[charTail++] = o;
	}
	public void add(byte o){
		byteArray[byteTail++] = o;
	}
	public void setCounter(long counter){
		this.counter = counter;
	}
	
//	public boolean initenclave(){
//		long startTime = System.currentTimeMillis();
//		if(1==init()){
//	 		long endTime   = System.currentTimeMillis();
//     			long totalTime = (endTime - startTime);
//     			System.out.println("init enclave running time= "+totalTime+" Millis");
//			return true;
//		}
//		else
//			return false;
//	}
//	
//	public boolean closeenclave(){
//		if(0==destroy())
//		return true;
//		else
//		return false;
//	}
	//sgx_invoker invo2= new sgx_invoker();

	public boolean call(){ 
		
		//int[] to List<Integer>
		//error:can't find class:org.apache.commons.lang3.ArrayUtils
//		Integer[] integers = ArrayUtils.toObject(intArray);
//		List<Integer> iList = Arrays.asList(integers);
//		
//		Double[] doubles = ArrayUtils.toObject(doubleArray);
//		List<Double> dList = Arrays.asList(doubles);
//		
//		Float[] floats = ArrayUtils.toObject(floatArray);
//		List<Float> fList = Arrays.asList(floats);
//		
//		Long[] longs = ArrayUtils.toObject(longArray);
//		List<Long> lList = Arrays.asList(longs);
//		
//		//char[] to List<Integer>
//		int[] charInt = new int[charArray.length];
//		for(int i=0; i<charArray.length; i++){
//			charInt[i] = Integer.parseInt(String.valueOf(charArray[i]));
//		}
//		Integer[] chars = ArrayUtils.toObject(charInt);
//		List<Integer> cList = Arrays.asList(chars);
		
	
		List<Integer> iList = new ArrayList<Integer>();
		List<Double> dList = new ArrayList<>();
		List<Float> fList = new ArrayList<>();
		List<Long> lList = new ArrayList<>();
		List<Integer> cList = new ArrayList<>();
		for(int i : intArray)
			iList.add(i);
		for(double i : doubleArray)
			dList.add(i);
		for(float i : floatArray)
			fList.add(i);
		//charArray to List<Integer>
		int[] charInt = new int[charArray.length];
		for(int i=0; i<charArray.length; i++){
			charInt[i] = Integer.parseInt(String.valueOf(charArray[i]));
		}
		for(int i : charInt)
			cList.add(i);
		//WebService Client
		Judge judge = new JudgeService().getJudgePort();
		boolean result = judge.commitReply(counter, iList, intTail, dList, doubleTail, fList, floatTail, lList, longTail, cList, charTail, byteArray, byteTail);
		
		return result;
		
//		int ret = commit(counter,intArray,intTail,doubleArray,doubleTail,floatArray,floatTail,longArray,longTail,charArray,charTail,byteArray,byteTail);
//		//int ret = 	commit(0,new int[]{1,1,1,4,5,6,7,8,9,0}, N,new double[]{0.0},0,new float[]{0},0,new long[]{0},0,new char[]{0},0);
//		
//		if(ret == 1)
//			return true;
//		else if(ret == 0)
//			return false;
//		else{
//			
//			//throw new Exception("error");
//			System.out.println("ret:"+ret);
//			System.out.println("error");
//			System.out.println("ret");
//			System.exit(1);
//		}
//		return false;
		
	//return commit(counter,intArray,intTail,doubleArray,doubleTail,floatArray,floatTail,longArray,longTail,charArray,charTail);

	
	}
	public static void main(String[] args)
	{
		 sgx_invoker invo= new sgx_invoker();
	    invo.commit(0,new int[]{1,1,1,4,5,6,7,8,9,0},N,new double[]{0.0},0,new float[]{0},0,new long[]{0},0,new char[]{0},0,new byte[]{0},0);
	
	};

	
}
